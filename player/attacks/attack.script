local camera = require "orthographic.camera"
go.property("speed", 300)
go.property("lifetime", 0.2)
go.property("hit_value", 10)
go.property("aoe", false)

go.property("mouse_pos", vmath.vector3())

function init(self)
	self.pos = go.get_position()
	self.mouse_pos = camera.screen_to_world(nil, self.mouse_pos)
	self.direction = vmath.normalize(vmath.vector3(self.mouse_pos.x - self.pos.x, self.mouse_pos.y - self.pos.y, 0))
	
	local angle = math.atan2( self.mouse_pos.y- self.pos.y , self.mouse_pos.x - self.pos.x) - math.pi/2
	go.set_rotation(vmath.quat_rotation_z(angle))
end

function update(self, dt)
	self.lifetime = self.lifetime - dt
	if self.lifetime <= 0 then
		go.delete()
	end
	self.pos = self.pos + self.direction * self.speed * dt
	go.set_position(self.pos)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") then
		
		msg.post(message.other_id, "hit", {hit_value = self.hit_value})
		if not self.aoe then
			go.delete()
		end
	end
end

