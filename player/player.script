local camera = require "orthographic.camera"

go.property("speed", 5000)

function init(self)
	msg.post(".", "acquire_input_focus")
	self.direction = vmath.vector3(0,0,0)
	self.pos = go.get_position()
	self.health = 100
end

function update(self, dt)
	if vmath.length(self.direction) ~= 0 then
		self.direction = vmath.normalize(self.direction)
		self.pos = self.pos + self.direction * dt * self.speed
		go.set_position(self.pos)
		self.direction.x = 0
		self.direction.y = 0
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("hit") then 
		self.health = self.health - 10
		if self.health <= 0 then
			--print("lost")
		end
	elseif message_id == hash("contact_point_response") then
		self.pos = go.get_position() + message.normal * message.distance
		go.set_position(self.pos)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("up") then 
		self.direction.y = 1
	elseif action_id == hash("down") then
		self.direction.y = -1
	elseif action_id == hash("left") then 
		self.direction.x = -1
	elseif action_id == hash("right") then
		self.direction.x = 1
	elseif action_id == hash("attack") and action.pressed then
		local mouse_world_pos = camera.screen_to_world(nil ,vmath.vector3(action.x, action.y, 0))
		local dir = vmath.normalize(mouse_world_pos - self.pos)
		factory.create("#attack_factory", self.pos, nil, {direction = dir})
	end
end
